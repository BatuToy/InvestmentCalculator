{"ast":null,"code":"var _jsxFileName = \"/Users/batu/Desktop/PROJECTS/ReactBootcamp/ReactWebProjects/InvestmentCalculator /src/components/Results.jsx\";\nimport { calculateInvestmentResults, formatter } from '../util/investment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = _ref => {\n  let {\n    input\n  } = _ref;\n  const annualData = calculateInvestmentResults(input);\n  const initialInvestment = annualData[0].valueEndOfYear - annualData[0].interest - annualData[0].annualInvestment;\n  let thead = /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Investment Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Interest (Year)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Total Interest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Invested Capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    id: \"result\",\n    children: [thead, /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: annualData.map(item => {\n        const totalInterest = item.valueEndOfYear - item.annualInvestment * item.year - initialInvestment;\n        const totalAmountInvested = item.valueEndOfYear - totalInterest;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(item.valueEndOfYear)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(item.interest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(totalInterest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(totalAmountInvested)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, item.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["calculateInvestmentResults","formatter","jsxDEV","_jsxDEV","Results","_ref","input","annualData","initialInvestment","valueEndOfYear","interest","annualInvestment","thead","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","item","totalInterest","year","totalAmountInvested","format","_c","$RefreshReg$"],"sources":["/Users/batu/Desktop/PROJECTS/ReactBootcamp/ReactWebProjects/InvestmentCalculator /src/components/Results.jsx"],"sourcesContent":["import { calculateInvestmentResults, formatter } from '../util/investment';\n\nconst Results = ({ input }) => {\n    const annualData = calculateInvestmentResults(input);\n    const initialInvestment = annualData[0].valueEndOfYear - annualData[0].interest - annualData[0].annualInvestment;\n    let thead = (\n        <thead>\n            <tr>\n                <th>Year</th>\n                <th>Investment Value</th>\n                <th>Interest (Year)</th>\n                <th>Total Interest</th>\n                <th>Invested Capital</th>\n            </tr>\n        </thead>\n    );\n\n\n    return (\n        <table id=\"result\">\n            {thead}\n            <tbody>\n                {annualData.map((item) => {\n                    const totalInterest = item.valueEndOfYear - (item.annualInvestment * item.year) - initialInvestment;\n                    const totalAmountInvested = item.valueEndOfYear - totalInterest;\n                    return (\n                        <tr key={item.year}>\n                            <td>{item.year}</td>\n                            <td>{formatter.format(item.valueEndOfYear)}</td>\n                            <td>{formatter.format(item.interest)}</td>\n                            <td>{formatter.format(totalInterest)}</td>\n                            <td>{formatter.format(totalAmountInvested)}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n}\nexport default Results;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}